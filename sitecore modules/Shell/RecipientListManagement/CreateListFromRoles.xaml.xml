<?xml version="1.0" encoding="UTF-8" ?>
<xamlControls 
  xmlns:x="http://www.sitecore.net/xaml"
  xmlns:ajax="http://www.sitecore.net/ajax"
  xmlns:rest="http://www.sitecore.net/rest"
  xmlns:javascript="http://www.sitecore.net/javascript"
  xmlns:r="http://www.sitecore.net/renderings"
  xmlns:xmlcontrol="http://www.sitecore.net/xmlcontrols"
  xmlns:p="http://schemas.sitecore.net/Visual-Studio-Intellisense"
  xmlns:asp="http://www.sitecore.net/microsoft/webcontrols"
  xmlns:html="http://www.sitecore.net/microsoft/htmlcontrols"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

    <RecipientListManagement.RecipientsLists.Lists.Creation.CreateListFromRoles x:inherits="RecipientListManagement.RecipientsLists.Lists.Creation.CreateListFromRolesPage,RecipientListManagement">
    <Sitecore.Controls.DialogPage Header="Create Recipient List" Icon="Network/32x32/id_card.png" Text="Create new Recipient List and add Sitecore roles to it." runat="server">
      <x:register assembly="ComponentArt.Web.UI" namespace="ComponentArt.Web.UI"/>

      <Stylesheet Src="Grid.css" DeviceDependant="true" runat="server" />

      <Script type="text/javascript" language="javascript" runat="server" x:placeholder="Scripts">
      <![CDATA[
      Event.observe(window, 'load', function(){ $$('form')[0].setStyle({overflow:'auto'}); });
      
        function getSelected() {
          var selected = $("ctl00_ctl00_ctl00_ctl00_SelectedRoles");
          
          if (selected == null) {
            selected = $("ctl00_ctl00_ctl00_ctl00_ctl04_SelectedRoles");
          }
          
          return selected;
        }
        
        function onDoubleClick() {
          scAdd();
        }
        
        function onSelectedDoubleClick() {
          scRemove();
        }
        
        function scAdd() {
          var selectedOptions = getSelected();
          var selectedRoles = Roles.getSelectedItems();
          
          if (selectedRoles.length == 0) {
            alert(scForm.translate("Please select a role"));
            return;
          }

          var added = false;

          selectedRoles.each(function(role) {
            var roleName = role.Id.decodeId();
            if (roleExists(roleName)) {
              foundExisting = true;
            }
            else {
              var opt = document.createElement("OPTION");
              selectedOptions.appendChild(opt);
              if(typeof(opt.innerText) != 'undefined')
              {
                opt.innerText = roleName;
              }
              else{
                opt.textContent = roleName;
              }
              
              added = true;
            }
          });
          
          if (!added) {
            alert(scForm.translate("Selected roles are already in the Recipient List"));
          }
          
          update();
          return false;
        }
        
        function scRemove() {
          var selected = getSelected();
          var newIndex = -1;
          var removed = false;
          
          $A(selected.options).each(function(option, index) {
            if (option.selected) {
              $(option).remove();
              removed = true;
              
              if (newIndex < 0) {
                newIndex = index - 1;
              }
            }
          });
          
          if (removed) {
            // IE listbox hack
            selected.style.position = selected.style.position == 'relative' ? 'static' : 'relative';
          } else {
            alert(scForm.translate("Please select a role"));
            return;
          }
          
          update();
          
          var selected = getSelected();
          
          var options = $A(selected.options);
          
          if (options.length > 0) {
            if (newIndex < 0) {
              options[0].selected = true;
            }
            else if (options.length > newIndex) {
              options[newIndex].selected = true;
            }
            else {
              options[options.length - 1].selected = true;
            }
          }
        }
        
        function roleExists(roleName) {
          var selected = getSelected();
          
          return $A(selected.options).find(function(option) {
            if(typeof(option.innerText) != 'undefined')
            {
              return option.innerText == roleName;
            }
            else
            {
              return option.textContent == roleName;
            }
          });
        }
        
        function update() {
          var hiddenField = $('ctl00_ctl00_ctl00_ctl00_SelectedValues');
          
          if (hiddenField == null) {
            hiddenField = $('ctl00_ctl00_ctl00_ctl00_ctl04_SelectedValues');
          }

          var result = "";
          $A(getSelected().options).each(function(option) {
            var optionValue = "";
            if(typeof(option.innerText) != 'undefined')
            {
              optionValue = option.innerText;
            }
            else
            {
              optionValue = option.textContent;
            }
            
            result += encodeURIComponent(optionValue) + "|";
          });

          hiddenField.value = result;
        }
      ]]>
      </Script>
      
      <style>
        .GridGroupingNotificationm
          display: none;
        }        
      </style>
      
      <AjaxScriptManager runat="server"/>
      <ContinuationManager runat="server" />

      <html:HtmlInputHidden ID="SelectedValues" runat="server" />
     
      
      <GridPanel Height="100%" Width="100%" runat="server">

        <Literal Text="Name:" runat="server" />
        <html:HtmlInputText ID="RecipientListName" runat="server" GridPanel.Height="20%" style="font:10pt verdana;width:100%;height:100%;margin:5 0;" Size="14"  Value="New RecipientList name"/>
        
        <Literal Text="Selected Roles:" runat="server" />
        <html:HtmlSelect ID="SelectedRoles" GridPanel.Height="20%" style="font:9pt verdana;width:100%;height:100%" Size="8" Multiple="true" ondblclick="javascript:onSelectedDoubleClick();" runat="server"/>

        <Border Padding="0px 0px 16px 0px" runat="server">
          <html:HtmlButton ID="Add" Type="button" style="width:75px;height:25px" javascript:Click="return scAdd()" runat="server">
            <Literal Text="Add" runat="server" />
          </html:HtmlButton>
          <html:HtmlButton ID="Remove" Type="button" style="width:75px;height:25px" javascript:Click="return scRemove()" runat="server">
            <Literal Text="Remove" runat="server" />
          </html:HtmlButton>
        </Border>

        <Literal Text="Available Roles:" runat="server" />
        <Border runat="server" GridPanel.Height="60%" GridPanel.Row.ID="RolesPanel">
          <Grid id="Roles"
            RunningMode="Callback"
            CssClass="Grid"

            ShowHeader="true"
            HeaderCssClass="GridHeader"
            AutoFocusSearchBox="false"
            
            FooterCssClass="GridFooter"

            GroupByText = ""
            GroupingNotificationText = ""
            GroupByCssClass="GroupByCell"
            GroupByTextCssClass="GroupByText"
            GroupBySortAscendingImageUrl="group_asc.gif"
            GroupBySortDescendingImageUrl="group_desc.gif"
            GroupBySortImageWidth="10"
            GroupBySortImageHeight="10"

            GroupingNotificationTextCssClass="GridHeaderText GridGroupingNotification"
            GroupingPageSize="5"
            
            PageSize="15"
            PagerStyle="Slider"
            PagerTextCssClass="GridFooterText"
      	    PagerButtonWidth="41"
      	    PagerButtonHeight="22"
            PagerImagesFolderUrl="/sitecore/shell/themes/standard/componentart/grid/pager/"
            
            ShowSearchBox="true"
            SearchTextCssClass="GridHeaderText"
            SearchBoxCssClass="SearchBox"
      	    
            SliderHeight="20"
            SliderWidth="150"
            SliderGripWidth="9"
            SliderPopupOffsetX="20"
            SliderPopupClientTemplateId="SliderTemplate"
            
            TreeLineImagesFolderUrl="/sitecore/shell/themes/standard/componentart/grid/lines/"
            TreeLineImageWidth="22"
            TreeLineImageHeight="19"
            
            PreExpandOnGroup="false"
            ImagesBaseUrl="/sitecore/shell/themes/standard/componentart/grid/"
            IndentCellWidth="22"

            LoadingPanelClientTemplateId="LoadingFeedbackTemplate"
            LoadingPanelPosition="MiddleCenter"
            
            Width="100%" Height="100%" runat="server">

            <Levels>
              <GridLevel
                DataKeyField="scGridID"
                ShowTableHeading="false"
                ShowSelectorCells="false"
                RowCssClass="Row"
                ColumnReorderIndicatorImageUrl="reorder.gif"
                DataCellCssClass="DataCell"
                HeadingCellCssClass="HeadingCell"
                HeadingCellHoverCssClass="HeadingCellHover"
                HeadingCellActiveCssClass="HeadingCellActive"
                HeadingRowCssClass="HeadingRow"
                HeadingTextCssClass="HeadingCellText"
                SelectedRowCssClass="SelectedRow"
                GroupHeadingCssClass="GroupHeading"
                SortAscendingImageUrl="asc.gif"
                SortDescendingImageUrl="desc.gif"
                SortImageWidth="13"
                SortImageHeight="13" runat="server">
                <Columns>
                  <GridColumn DataField="scGridID" Visible="false" runat="server" />
                  <GridColumn DataField="Name" AllowSorting="false" AllowGrouping="false" IsSearchable="true" SortedDataCellCssClass="SortedDataCell" HeadingText="Role" runat="server" />
                </Columns>
              </GridLevel>
            </Levels>

            <ClientTemplates>
              <ClientTemplate Id="LoadingFeedbackTemplate" runat="server">
                <table cellspacing="0" cellpadding="0" border="0">
                  <tr>
                    <td style="font-size:10px;">
                      <Literal Text="Loading..." runat="server" />;
                    </td>
                    <td>
                      <img src="/sitecore/shell/themes/standard/componentart/grid/spinner.gif" width="16" height="16" border="0" />
                    </td>
                  </tr>
                </table>
              </ClientTemplate>

              <ClientTemplate Id="SliderTemplate" runat="server">
                <table class="SliderPopup" cellspacing="0" cellpadding="0" border="0">
                  <tr>
                    <td>
                      <div style="padding:4px;font:8pt tahoma;white-space:nowrap;overflow:hidden">## DataItem.GetMember('Name').Value ##</div>
                    </td>
                  </tr>
                  <tr>
                    <td style="height:14px;background-color:#666666;padding:1px 8px 1px 8px;color:white">
                      ## DataItem.PageIndex + 1 ## / ## Roles.PageCount ##
                    </td>
                  </tr>
                </table>
              </ClientTemplate>
            </ClientTemplates>
          </Grid>
        </Border>
      </GridPanel>
      
    </Sitecore.Controls.DialogPage>
  </RecipientListManagement.RecipientsLists.Lists.Creation.CreateListFromRoles>

</xamlControls>
                           